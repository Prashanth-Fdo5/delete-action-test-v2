name: Auto Tag Release

on:
  # Trigger manually from GitHub UI
  workflow_dispatch:
  
  # Or trigger automatically on push to main (optional)
  # push:
  #   branches: [ main ]

jobs:
  create-tag:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Fetch all history and tags
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Switch to main and pull latest
      run: |
        git checkout main
        git pull origin main
    
    - name: Get latest tag and calculate next version
      id: version
      run: |
        # Get the latest tag, default to v0.0.00 if no tags exist
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.00")
        echo "Latest tag: $LATEST_TAG"
        
        # Remove 'v' prefix and split version
        VERSION=${LATEST_TAG#v}
        IFS='.' read -r MAJOR MINOR <<< "$VERSION"
        
        # Convert to numbers for calculation
        MAJOR_NUM=$((10#$MAJOR))
        MINOR_NUM=$((10#$MINOR))
        
        # Increment logic: if minor reaches 99, increment major and reset minor to 01
        if [ $MINOR_NUM -ge 99 ]; then
          MAJOR_NUM=$((MAJOR_NUM + 1))
          MINOR_NUM=1
        else
          MINOR_NUM=$((MINOR_NUM + 1))
        fi
        
        # Format with leading zeros: major (1 digit), minor (2 digits)
        NEW_MAJOR=$(printf "%d" $MAJOR_NUM)
        NEW_MINOR=$(printf "%02d" $MINOR_NUM)
        
        NEW_VERSION="v$NEW_MAJOR.$NEW_MINOR"
        echo "New version: $NEW_VERSION"
        
        # Set output for next steps
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
    
    - name: Create and push new tag
      run: |
        NEW_TAG="${{ steps.version.outputs.new_version }}"
        
        # Create the tag with message
        git tag $NEW_TAG -m "$NEW_TAG"
        
        # Push the tag to origin
        git push origin $NEW_TAG
        
        echo "âœ… Successfully created and pushed tag: $NEW_TAG"
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.new_version }}
        release_name: Release ${{ steps.version.outputs.new_version }}
        body: |
          ## Changes in ${{ steps.version.outputs.new_version }}
          
          Auto-generated release from ${{ steps.version.outputs.latest_tag }} to ${{ steps.version.outputs.new_version }}
          
          ### What's Changed
          - Automated tag release
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.version.outputs.latest_tag }}...${{ steps.version.outputs.new_version }}
        draft: false
        prerelease: false
    
    - name: Summary
      run: |
        echo "ðŸŽ‰ Release Summary:"
        echo "- Previous version: ${{ steps.version.outputs.latest_tag }}"
        echo "- New version: ${{ steps.version.outputs.new_version }}"
        echo "- Release created: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.new_version }}"