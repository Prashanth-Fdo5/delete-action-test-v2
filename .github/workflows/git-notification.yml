name: Notify Zoho Cliq on Tag or Production Deployment

on:
  push:
    tags:
      - '*'
  release:
    types: [published]
  workflow_dispatch:

jobs:
  notify-and-deploy:
    runs-on: ubuntu-latest
    continue-on-error: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract environment info
        run: |
          echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "DEPLOYED_BY=${{ github.actor }}" >> $GITHUB_ENV
          echo "WORKFLOW_RUN_ID=${{ github.run_id }}" >> $GITHUB_ENV
          echo "DEPLOYMENT_TIME=$(date '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV

      - name: Notify Staging Tag Push
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
        env:
          CLIQ_WEBHOOK_URL: https://cliq.zoho.com/company/779974041/api/v2/channelsbyname/testingchannel/message?zapikey=your_cliq_api_key
        run: |
          TAG_NAME="${GITHUB_REF##*/}"
          PREFIX=$(echo "$TAG_NAME" | cut -d'-' -f1)

          case "$PREFIX" in
            crm)
              TITLE="New Staging Tag Release for CRM"
              ;;
            hrm)
              TITLE="New Staging Tag Release for HRM"
              ;;
            review)
              TITLE="New Staging Tag Release for Review site"
              ;;
            *)
              echo "Unknown prefix '$PREFIX', skipping notification."
              exit 0
              ;;
          esac

          cat <<EOF > payload.json
          {
            "text": "üöÄ $TITLE",
            "bot": {
              "name": "Release Bot",
              "image": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
            },
            "card": {
              "title": "$TITLE",
              "theme": "modern-inline"
            },
            "slides": [
              {
                "type": "label",
                "title": "Release Details",
                "data": [
                  { "Tag": "$TAG_NAME" },
                  { "Author": "${{ github.actor }}" },
                  { "Repository": "${{ github.repository }}" },
                  { "View on GitHub": "[üîó View Tag](https://github.com/${{ github.repository }}/releases/tag/$TAG_NAME)" }
                ]
              }
            ]
          }
          EOF
          curl -s -X POST "$CLIQ_WEBHOOK_URL" -H "Content-Type: application/json" -d @payload.json
          rm payload.json

      - name: Notify Production Deployment
        if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
        env:
          CLIQ_WEBHOOK_URL: https://cliq.zoho.com/company/779974041/api/v2/channelsbyname/testingchannel/message?zapikey=your_cliq_api_key
        run: |
          cat <<EOF > payload.json
          {
            "text": "üéâ Production Deployment Triggered!",
            "bot": {
              "name": "Production Deploy Bot",
              "image": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
            },
            "card": {
              "title": "Production Deployment",
              "theme": "modern-inline"
            },
            "slides": [
              {
                "type": "label",
                "title": "Details",
                "data": [
                  { "Environment": "üî¥ Production" },
                  { "Release": "${{ github.event.release.tag_name }}" },
                  { "Release Name": "${{ github.event.release.name }}" },
                  { "Published By": "${{ github.event.release.author.login }}" },
                  { "Repository": "${GITHUB_REPOSITORY}" },
                  { "Deployment Time": "${DEPLOYMENT_TIME}" },
                  { "View Release": "[üîó View Release](${{ github.event.release.html_url }})" }
                ]
              }
            ]
          }
          EOF
          curl -s -X POST "$CLIQ_WEBHOOK_URL" -H "Content-Type: application/json" -d @payload.json
          rm payload.json

      - name: Notify Final Deployment Status
        if: always()
        env:
          CLIQ_WEBHOOK_URL: https://cliq.zoho.com/company/779974041/api/v2/channelsbyname/testingchannel/message?zapikey=your_cliq_api_key
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Looking up PR that merged this commit..."
          PR_INFO=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/commits/${GITHUB_SHA}/pulls" \
            -H "Accept: application/vnd.github.groot-preview+json")

          if echo "$PR_INFO" | jq -e 'type == "array"' >/dev/null; then
            MERGED_BY=$(echo "$PR_INFO" | jq -r '.[0].merged_by.login // "N/A"')
          else
            MERGED_BY="N/A"
          fi

          if [ "${{ job.status }}" == "success" ]; then
            STATUS="‚úÖ Deployment completed successfully"
          else
            STATUS="‚ùå Deployment failed"
          fi

          cat <<EOF > payload.json
          {
            "text": "$STATUS",
            "bot": {
              "name": "Deployment Status Bot",
              "image": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
            },
            "card": {
              "title": "Deployment Status Report",
              "theme": "modern-inline"
            },
            "slides": [
              {
                "type": "label",
                "title": "Details",
                "data": [
                  { "Status": "$STATUS" },
                  { "Tag": "${TAG_NAME}" },
                  { "Deployed By": "${DEPLOYED_BY}" },
                  { "PR Merged By": "$MERGED_BY" },
                  { "Repository": "${GITHUB_REPOSITORY}" },
                  { "Workflow": "${GITHUB_WORKFLOW}" },
                  { "Run": "https://github.com/${GITHUB_REPOSITORY}/actions/runs/${WORKFLOW_RUN_ID}" }
                ]
              }
            ]
          }
          EOF
          curl -s -X POST "$CLIQ_WEBHOOK_URL" -H "Content-Type: application/json" -d @payload.json
          rm payload.json
